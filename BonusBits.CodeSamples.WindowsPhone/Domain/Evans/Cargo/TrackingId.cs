using System.Collections.Generic;
using System;

namespace BonusBits.CodeSamples.WP7.Domain.Evans.Cargo
{
    /// <summary>
    /// Uniquely identifies a particular cargo. Automatically generated by the application.
    /// http://dddsample.sourceforge.net/
    /// </summary>
#pragma warning disable 661,660 //Equals and GetHashCode are overridden in ValueObject class.
    public class TrackingId : ValueObject
#pragma warning restore 661,660
    {
        private readonly String m_idString;

        /// <summary>
        /// Initializes a new instance of the <see cref="TrackingId"/> class.
        /// </summary>
        public TrackingId() { }
        /// <summary>
        /// Creates new <see cref="TrackingId"/> instacnce.
        /// </summary>
        /// <param name="idString">String representation of this new tracking id.</param>
        public TrackingId(String idString)
        {
            m_idString = idString;
        }

        /// <summary>
        /// Returns string representation of this tracking id.
        /// </summary>
        public String IdString
        {
            get { return m_idString; }
        }

        /// <summary>
        /// To be overridden in inheriting clesses for providing a collection of atomic values of
        /// this Value Object.
        /// </summary>
        /// <returns>Collection of atomic values.</returns>
        protected override IEnumerable<Object> GetAtomicValues()
        {
            yield return m_idString;
        }

        /// <summary>
        /// Implements the operator ==.
        /// </summary>
        /// <param name="left">The left.</param>
        /// <param name="right">The right.</param>
        /// <returns>The result of the operator.</returns>
        public static Boolean operator ==(TrackingId left, TrackingId right)
        {
            return EqualOperator(left, right);
        }

        /// <summary>
        /// Implements the operator !=.
        /// </summary>
        /// <param name="left">The left.</param>
        /// <param name="right">The right.</param>
        /// <returns>The result of the operator.</returns>
        public static Boolean operator !=(TrackingId left, TrackingId right)
        {
            return NotEqualOperator(left, right);
        }
    }
}
